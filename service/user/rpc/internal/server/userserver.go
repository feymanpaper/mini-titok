// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package server

import (
	"context"

	"mini-titok/service/user/rpc/internal/logic"
	"mini-titok/service/user/rpc/internal/svc"
	"mini-titok/service/user/rpc/userclient"
)

type UserServer struct {
	svcCtx *svc.ServiceContext
	userclient.UnimplementedUserServer
}

func NewUserServer(svcCtx *svc.ServiceContext) *UserServer {
	return &UserServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServer) Login(ctx context.Context, in *userclient.LoginRequest) (*userclient.LoginResponse, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *UserServer) Register(ctx context.Context, in *userclient.RegisterRequest) (*userclient.RegisterResponse, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

func (s *UserServer) GetUserInfo(ctx context.Context, in *userclient.UserInfoRequest) (*userclient.UserInfoResponse, error) {
	l := logic.NewGetUserInfoLogic(ctx, s.svcCtx)
	return l.GetUserInfo(in)
}

func (s *UserServer) GetFollowUserList(ctx context.Context, in *userclient.GetFollowUserListRequest) (*userclient.GetFollowUserListResponse, error) {
	l := logic.NewGetFollowUserListLogic(ctx, s.svcCtx)
	return l.GetFollowUserList(in)
}

func (s *UserServer) GetFanUserList(ctx context.Context, in *userclient.GetFanUserListRequest) (*userclient.GetFanUserListResponse, error) {
	l := logic.NewGetFanUserListLogic(ctx, s.svcCtx)
	return l.GetFanUserList(in)
}
