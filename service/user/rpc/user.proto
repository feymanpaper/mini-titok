syntax = "proto3";
package user;
option go_package="./userclient";

message RegisterRequest {
  string UserName = 1; // 注册用户名，最长32个字符
  string Password = 2; // 密码，最长32个字符
}

message RegisterResponse {
  int64 UserId = 3; // 用户id
  string Token = 4; // 用户鉴权token
}

message LoginRequest {
  string UserName = 1; // 注册用户名，最长32个字符
  string Password = 2; // 密码，最长32个字符
}

message LoginResponse {
  int64 UserId = 3; // 用户id
  string Token = 4; // 用户鉴权token
}

message UserInfoRequest {
  int64 UserId = 1; // 用户id
}

message UserInfoResponse {
  UserInfo userInfo = 3; // 用户信息
}

message UserInfo {
  int64 Id = 1; // 用户id
  string Name = 2; // 用户名称
  int64 FollowCount = 3; // 关注总数
  int64 FollowerCount = 4; // 粉丝总数
  bool IsFollow = 5; // true-已关注，false-未关注
  string Avatar = 6; //用户头像
  string BackgroundImage = 7; //用户个人页顶部大图
  string Signature = 8; //个人简介
  int64 TotalFavorited = 9; //获赞数量
  int64 WorkCount = 10; //作品数量
  int64 FavoriteCount = 11; //点赞数量
}

message GetFollowUserListRequest{
  int64 UserId = 1;
  int64 Cursor = 2;
  int64 PageSize = 3;
  int64 EndId = 4;
}

message GetFollowUserListResponse{
  repeated UserInfo FollowUserList = 1;
  bool IsEnd = 2;
  int64 Cursor = 3;
  int64 EndId = 4;
}

message GetFanUserListRequest{
  int64 UserId = 1;
  int64 Cursor = 2;
  int64 PageSize = 3;
  int64 EndId = 4;
}

message GetFanUserListResponse{
  repeated UserInfo FanUserList = 1;
  bool IsEnd = 2;
  int64 Cursor = 3;
  int64 EndId = 4;
}

service User {
  rpc Login(LoginRequest) returns(LoginResponse);
  rpc Register(RegisterRequest) returns(RegisterResponse);
  rpc GetUserInfo(UserInfoRequest) returns(UserInfoResponse);
  rpc GetFollowUserList(GetFollowUserListRequest) returns (GetFollowUserListResponse);
  rpc GetFanUserList(GetFanUserListRequest) returns (GetFanUserListResponse);
}



