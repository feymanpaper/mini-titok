// Code generated by goctl. DO NOT EDIT.
// Source: relation.proto

package relation

import (
	"context"

	"mini-titok/service/relation/rpc/relationclient"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	FansListRequest          = relationclient.FansListRequest
	FansListResponse         = relationclient.FansListResponse
	FollowActionRequest      = relationclient.FollowActionRequest
	FollowActionResponse     = relationclient.FollowActionResponse
	FollowIdPair             = relationclient.FollowIdPair
	FollowListRequest        = relationclient.FollowListRequest
	FollowListResponse       = relationclient.FollowListResponse
	GetRelationCountRequest  = relationclient.GetRelationCountRequest
	GetRelationCountResponse = relationclient.GetRelationCountResponse

	Relation interface {
		FollowAction(ctx context.Context, in *FollowActionRequest, opts ...grpc.CallOption) (*FollowActionResponse, error)
		FollowList(ctx context.Context, in *FollowListRequest, opts ...grpc.CallOption) (*FollowListResponse, error)
		FansList(ctx context.Context, in *FansListRequest, opts ...grpc.CallOption) (*FansListResponse, error)
		GetRelationCount(ctx context.Context, in *GetRelationCountRequest, opts ...grpc.CallOption) (*GetRelationCountResponse, error)
	}

	defaultRelation struct {
		cli zrpc.Client
	}
)

func NewRelation(cli zrpc.Client) Relation {
	return &defaultRelation{
		cli: cli,
	}
}

func (m *defaultRelation) FollowAction(ctx context.Context, in *FollowActionRequest, opts ...grpc.CallOption) (*FollowActionResponse, error) {
	client := relationclient.NewRelationClient(m.cli.Conn())
	return client.FollowAction(ctx, in, opts...)
}

func (m *defaultRelation) FollowList(ctx context.Context, in *FollowListRequest, opts ...grpc.CallOption) (*FollowListResponse, error) {
	client := relationclient.NewRelationClient(m.cli.Conn())
	return client.FollowList(ctx, in, opts...)
}

func (m *defaultRelation) FansList(ctx context.Context, in *FansListRequest, opts ...grpc.CallOption) (*FansListResponse, error) {
	client := relationclient.NewRelationClient(m.cli.Conn())
	return client.FansList(ctx, in, opts...)
}

func (m *defaultRelation) GetRelationCount(ctx context.Context, in *GetRelationCountRequest, opts ...grpc.CallOption) (*GetRelationCountResponse, error) {
	client := relationclient.NewRelationClient(m.cli.Conn())
	return client.GetRelationCount(ctx, in, opts...)
}
