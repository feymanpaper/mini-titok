// Code generated by goctl. DO NOT EDIT.
// Source: relation.proto

package relation

import (
	"context"

	"mini-titok/service/relation/rpc/relationclient"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ActionRequest      = relationclient.ActionRequest
	ActionResponse     = relationclient.ActionResponse
	FansListRequest    = relationclient.FansListRequest
	FansListResponse   = relationclient.FansListResponse
	FollowListRequest  = relationclient.FollowListRequest
	FollowListResponse = relationclient.FollowListResponse
	UserInfo           = relationclient.UserInfo

	Relation interface {
		Action(ctx context.Context, in *ActionRequest, opts ...grpc.CallOption) (*ActionResponse, error)
		FollowList(ctx context.Context, in *FollowListRequest, opts ...grpc.CallOption) (*FollowListResponse, error)
		FansList(ctx context.Context, in *FansListRequest, opts ...grpc.CallOption) (*FansListResponse, error)
	}

	defaultRelation struct {
		cli zrpc.Client
	}
)

func NewRelation(cli zrpc.Client) Relation {
	return &defaultRelation{
		cli: cli,
	}
}

func (m *defaultRelation) Action(ctx context.Context, in *ActionRequest, opts ...grpc.CallOption) (*ActionResponse, error) {
	client := relationclient.NewRelationClient(m.cli.Conn())
	return client.Action(ctx, in, opts...)
}

func (m *defaultRelation) FollowList(ctx context.Context, in *FollowListRequest, opts ...grpc.CallOption) (*FollowListResponse, error) {
	client := relationclient.NewRelationClient(m.cli.Conn())
	return client.FollowList(ctx, in, opts...)
}

func (m *defaultRelation) FansList(ctx context.Context, in *FansListRequest, opts ...grpc.CallOption) (*FansListResponse, error) {
	client := relationclient.NewRelationClient(m.cli.Conn())
	return client.FansList(ctx, in, opts...)
}
