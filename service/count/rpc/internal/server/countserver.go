// Code generated by goctl. DO NOT EDIT.
// Source: count.proto

package server

import (
	"context"

	"mini-titok/service/count/rpc/countclient"
	"mini-titok/service/count/rpc/internal/logic"
	"mini-titok/service/count/rpc/internal/svc"
)

type CountServer struct {
	svcCtx *svc.ServiceContext
	countclient.UnimplementedCountServer
}

func NewCountServer(svcCtx *svc.ServiceContext) *CountServer {
	return &CountServer{
		svcCtx: svcCtx,
	}
}

func (s *CountServer) IncFollowerCount(ctx context.Context, in *countclient.IncFollowerCountRequest) (*countclient.IncFollowerCountResponse, error) {
	l := logic.NewIncFollowerCountLogic(ctx, s.svcCtx)
	return l.IncFollowerCount(in)
}

func (s *CountServer) DecFollowerCount(ctx context.Context, in *countclient.DecFollowerCountRequest) (*countclient.DecFollowerCountResponse, error) {
	l := logic.NewDecFollowerCountLogic(ctx, s.svcCtx)
	return l.DecFollowerCount(in)
}

func (s *CountServer) GetFollowerCount(ctx context.Context, in *countclient.GetFollowerCountRequest) (*countclient.GetFollowerCountResponse, error) {
	l := logic.NewGetFollowerCountLogic(ctx, s.svcCtx)
	return l.GetFollowerCount(in)
}
